1.  What is 8 bit MCU? 8 bit vs 32 bit
2.  Meaning of typedef in usecase
3.  variable store class?
4.  MCU start proceduce
5.  re-implement strcpy function
6.  struct vs union?
    union {
        int a,
        char b,
    } ab;
    ab.a = 64;
    ab.b = ?;
    ab.a = 2500;
    ab.b = ?;
7.  big endian and little endian, is big endian used with little endian in one program/application?
8.  memory alocated?
    char a[4] = "foo";
    char * b = "bar";
    is there any problem if:
    a = "foo";
    b[0] = 64;
    a[0] = 64;
9.  Do you think it works? If not, what is problem?
    int month=5;
    if (month=1) printf("January");
    else  printf("Not January");
10. Do you know stack? Which one will be allocated in stack? (variables below)
    int a=5;
    int b[5];
    void elloh(char  *c, char *d)
    {
        char e[5];
        char *g=NULL;
        g = (char*) malloc(10);
        g = "hello hello";
        printf("%d", sizeof(g));
        printf("%d", sizeof(*g));
    }
    void f(char *a, char *b)
    {
        b=a;
    }
    char *p_a, *p_b;
    int main (void)
    {
        p_a = "hello";
        f(p_a,p_b);
        printf("%s", p_a);
        printf("%s", p_b);
        getchar();
    }
11. What will be printed?
    unsigned char c;
    int main (){
        for (c = 0; c < 999; c++) printf ("%d",c);
    }
12. Is there any problem?
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    void myfunction(char *q)
    {
        memcpy (q ,"hello",5);
    }
    int main()
    {
        char * p;
        myfunction(p);
        printf(p);
    }
13. In the following program:
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    void myfunction(char *q)
    {
        q = (char*)malloc(8);
        memcpy (q ,"hello",6);
    }
    int main()
    {
        char *p;
        myfunction(p);
        printf(p);
        getchar();
    }
    a. Is there any problem?
    b. What should we do to have "hello" printed out?
14. In the following program:
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    void myfunction(char *q)
    {
        int  i ;
        for(i= 0; i <1000; i++)
        {
            q = (char*)malloc(8);
            memcpy(q, "hello", 6);
            printf(q);
        }
    }
    int main()
    {
        char * p;
        myfunction(p);
        getchar();
    }
    a. Is there any problem ?
    b. with Ram = 2000 byte, is there any problem?
    c. Where does myfunction stay at?
15. Where are these variables stored?
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    int a = 5;
    int d;
    char  b[6] = "hello";
    const int c = 4;
    void myfuntion()
    {
        static int g = 5;
        const int h = 6;
        char i;
    }
    int main ()
    {
        static int d = 6;
        const int e = 3;
        char *f;
        f = (char*)malloc(5);
        myfuntion();
    }
16. What does the function do? Is there any problem?
    int divide (int a, int b)
    {
        return b/a;
    }
17. In the following program:
    int a = 0;
    if (a = 0)
    {
        printf("January");
    }
    else {
        printf("Not January");
    }
    a. What is printfed? b. If we change 2 lines
    int a = 0;
    if (a = 0)
    To:
    int a = 6;
    if (a = 6)
    -> what happens?
    c. If we change 2 lines int
    a = 0;
    if (a = 0)
    To:
    int a = 6;
    if (a = 5)
    -> what happens?
18.In the following program?
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    void AssignString(char *str)
    {
        str = "This is the 2nd string";
    }
    int main()
    {
        char *abc = "This is original string";
        AssignString(abc);
        printf(abc);
        getchar();
    }
    a. What is printed out?
    b. If we want to have AssignString function works correctly ("This is the 2nd string" to be printed out), how should we change?
19. Is there any problem?
    unsinged char Add(uchar a, uchar b)
    {
        return (a + b);
    }
20. What will be printfed?
    int main()
    {
        int i = 10;
        while (i)
        {
            printf("%d", --i);
        }
    }
21. What will be printfed?
    char text[4] = "abcd";
    printf("%s", text);
22. What will be printfed?
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    void func_a()
    {
        static int i = 0;
        i++;
        printf("%d", i);
    }
    int main()
    {
        for (int i = 0;i<10;i++) func_a();
    }
23. In this program:
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    int main()
    {
        char array[20];
        for (int i = 0;i<20;i++) array[i] = i;
        int* p = array;
        p++;
        p++;
        printf("0x%x", *p);
    }
    a. Is there any problem?
    b. If you fix the issue above, what will be printed out?
24. What will be printed?
    unsigned int x;
    for (x = 10;x>=0;x--) printf("%d",x);
25. How does the function work? Where are variables allocated?
    int a;
    char* b;
    const char c[20] = "I am a string";
    void func(char d, int c, char* f)
    {
        int g=0;
        static int h = 2;
        char *i = NULL;
        i = (char*)malloc(20);
        strcpy(i, "Hello");
        return;
    }
    int main ()
    {
        int j, k;
        char *l;
        func(j,k,l);
    }
26. What is printed out?
    typedef struct {
        char x;
        int y;
    } ystruct;
    int main ()
    {
        printf("%d", sizeof(mystruct));
    }
27. Is there any problem with comparing 2 floating point values?
    double a, b;
    ...
    if(a == b)
    ...
28. Is there any problem with following function?
    int copy( char *scr, char *dst, unsigned int size)
    {
        char *s1;
        while(size--)
        {
            *s1++ = *scr++;
            *dst++ = *s1;
        }
        if(256/size) return 0;
        else return 1;
    }
29. What is linked list? Can you write a program to revert a linked list?
30. What is Endianess? Write a program to convert a "unsigned int" number from Little-Endian -> Big-Endian?
31. Add two number use operator &,^,|,!, do not use "+"
32. There are 2 linked lists called P and Q. Write a program to create a linked list S from those 2 ones in increment order
33. n is an unsinged int number (32 bits). Write a program to count number of bit 1 of n. For example n = 0b0000000000101 => there are 2 bits 1
34. n is an unsinged int number (32 bits). Write a program to change byte 0 with byte 3, byte 1 with byte 2.
35. Write a program to input one string, then print out the part of string start from "SOF" and finish at "EOF".
    For example, if user put "This if what SOP I want to show EOF xxx", the program will print out " I want to show "
36. Write a program to multiply two matrix?
37. What is volatile variable?
38. What is "static" keyword for?
39. What is function pointer array? Write a program to demostrate function pointer array.
40. What is software timer? Write a program to implement software timer
41. What is vector table?
42. What is ISR? Could you explain what the system does when an interrupt happens?
43. What is nested interrupt?
44. What is re-entrant interrupt?
45. What is interrupt chaining?
46. What is Harvard architecture? What is Von Neumann architecture?
47. What is EABI? How functions' arguments are passed and return values retrieved?
48. What is ADC? What is difference between single-ended and differential inputs?
49. Can you compare SPI and I2C?
50. What is RTOS?
51. Can you write a program using RTOS to blink 2 LEDs, one at 1Hz, the other one at 1.5Hz frequency?
52. What is semaphore?
53. What is mutex? What is difference between mutex and binary semaphone?
54. What is mail box?
55. What is message queue?
56. What is reentrant function? How to write a reentrant function?
57. What is recursive function? What need to be considered when use this function?
58. What is deadlock and how to prevent?
59. What is priority inversion and how to prevent?
60. What is critical section?
61. What is Task? Each task uses one stack or not?
62. How many stack is used in system?
63. What is the virtual memory?
64. What is the memory protection?
65. What is different between user and kenel mode?
66. What is mutithread?
67. What is blocking call, non-clocking call?
